<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kh.mapper.GameMemberMapper">

    <!-- 리뷰 중복확인 -->
    <select id="countReview" resultType="int">
        SELECT COUNT(*)
        FROM REVIEW
        WHERE USER_NAME = #{userName}
        AND GAME_ID = #{gameId}
    </select>

    <!-- 리뷰 저장 -->
    <insert id="reviewSave" parameterType="GameReviewVO" useGeneratedKeys="true" keyProperty="reviewId" keyColumn="REVIEW_ID">
        INSERT INTO REVIEW (USER_NAME, GAME_ID, RATING, CONTENT)
        VALUES (
        #{userName}
        , #{gameId}
        , #{rating}
        , #{content}
        )
    </insert>

    <!-- 리뷰 수정 -->
    <update id="reviewUpdate" parameterType="GameReviewVO">
        UPDATE REVIEW
        SET RATING = #{rating},
        CONTENT = #{content},
        UPDATED_AT = CURRENT_TIMESTAMP
        WHERE USER_NAME = #{userName}
        AND GAME_ID = #{gameId}
    </update>

    <!-- 게임ID로 리뷰조회 -->
    <select id="reviewListByGameId" parameterType="Long" resultType="GameReviewVO">
        SELECT * FROM REVIEW
        WHERE game_id = #{gameId}
        ORDER BY created_at DESC
    </select>

    <!-- 프로시저 사용 찜 등록 -->
    <select id="toggleGameLike" statementType="CALLABLE" resultType="GameLikeVO">
        { CALL TOGGLE_GAME_LIKE(
        #{userName, mode=IN, jdbcType=VARCHAR},
        #{gameId, mode=IN, jdbcType=NUMERIC},
        #{title, mode=IN, jdbcType=VARCHAR},
        #{backgroundImage, mode=IN, jdbcType=VARCHAR},
        #{price, mode=IN, jdbcType=NUMERIC},
        #{salePrice, mode=IN, jdbcType=NUMERIC},
        #{released, mode=IN, jdbcType=VARCHAR},
        #{esrbRating, mode=IN, jdbcType=VARCHAR},
        #{result, mode=OUT, jdbcType=VARCHAR}
        ) }
    </select>

    <!-- 프로시저 사용 장바구니 등록 -->
    <select id="toggleGameCart" statementType="CALLABLE" resultType="GameCartVO">
        { CALL TOGGLE_GAME_CART(
        #{userName, mode=IN, jdbcType=VARCHAR},
        #{gameId, mode=IN, jdbcType=NUMERIC},
        #{title, mode=IN, jdbcType=VARCHAR},
        #{backgroundImage, mode=IN, jdbcType=VARCHAR},
        #{price, mode=IN, jdbcType=NUMERIC},
        #{salePrice, mode=IN, jdbcType=NUMERIC},
        #{released, mode=IN, jdbcType=VARCHAR},
        #{esrbRating, mode=IN, jdbcType=VARCHAR},
        #{result, mode=OUT, jdbcType=VARCHAR}
        ) }
    </select>

    <!-- 프로시저 사용 할인가 등록 -->
    <select id="toggleDiscount" statementType="CALLABLE" resultType="GameDiscountVO">
        { CALL TOGGLE_GAME_DISCOUNT(
        #{userName, mode=IN, jdbcType=VARCHAR},
        #{gameId, mode=IN, jdbcType=NUMERIC},
        #{title, mode=IN, jdbcType=VARCHAR},
        #{backgroundImage, mode=IN, jdbcType=VARCHAR},
        #{price, mode=IN, jdbcType=NUMERIC},
        #{salePrice, mode=IN, jdbcType=NUMERIC},
        #{released, mode=IN, jdbcType=VARCHAR},
        #{esrbRating, mode=IN, jdbcType=VARCHAR},
        #{result, mode=OUT, jdbcType=VARCHAR}
        ) }
    </select>


    <!-- 게임 좋아요 눌렀을때 데이터가 있으면 색상변경기능 -->
    <select id="checkLike" parameterType="GameLikeVO" resultType="int">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS cnt
        FROM GAME_LIKE
        WHERE USER_NAME = #{userName} AND GAME_ID = #{gameId}
    </select>

    <select id="checkCart" parameterType="GameCartVO" resultType="int">
    SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS cnt
    FROM GAME_CART
    WHERE USER_NAME = #{userName} AND GAME_ID = #{gameId}
    </select>

    <select id="checkDiscount" parameterType="GameDiscountVO" resultType="int">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END AS cnt
        FROM GAME_DISCOUNT
        WHERE GAME_ID = #{gameId}
    </select>

    <!-- 유저별 장바구니 목록 조회 -->
    <select id="getCartByUser" parameterType="string" resultType="GameCartVO">
        SELECT
        CART_ID AS cartId,
        USER_NAME AS userName,
        GAME_ID AS gameId,
        TITLE AS title,
        BACKGROUND_IMAGE AS backgroundImage,
        PRICE AS price,
        SALE_PRICE AS salePrice,
        RELEASED AS released,          -- 출시일
        ESRB_RATING AS esrbRating,     -- 연령등급
        CREATED_AT AS createdAt
        FROM GAME_CART
        WHERE USER_NAME = #{userName}
        ORDER BY CREATED_AT DESC
    </select>

    <!-- 게임 할인율별로 리스트 가져오기 (20개씩 페이징) -->
    <select id="getDiscountGame" parameterType="map" resultType="GameDiscountVO">
        SELECT
        DISCOUNT_ID,
        USER_NAME,
        GAME_ID,
        TITLE,
        BACKGROUND_IMAGE,
        PRICE,
        SALE_PRICE,
        ROUND((1 - (SALE_PRICE / PRICE)) * 100, 2) AS DISCOUNT_PERCENT,
        RELEASED,
        ESRB_RATING,
        CREATED_AT,
        '' AS RESULT
        FROM
        GAME_DISCOUNT
        WHERE
        PRICE > 0 AND SALE_PRICE IS NOT NULL
        ORDER BY
        TITLE
        OFFSET #{offset} ROWS
        FETCH NEXT 20 ROWS ONLY
    </select>

    <!-- 게임할인율 제일 높은게임 가져오기 -->
    <select id="getDiscountGameOne" resultType="GameDiscountVO">
        SELECT
        DISCOUNT_ID,
        USER_NAME,
        GAME_ID,
        TITLE,
        BACKGROUND_IMAGE,
        PRICE,
        SALE_PRICE,
        ROUND((1 - (SALE_PRICE / PRICE)) * 100, 2) AS DISCOUNT_PERCENT,
        RELEASED,
        ESRB_RATING,
        CREATED_AT,
        '' AS RESULT
        FROM
        GAME_DISCOUNT
        WHERE
        PRICE > 0 AND SALE_PRICE IS NOT NULL
        ORDER BY
        DISCOUNT_PERCENT DESC
        FETCH FIRST 1 ROWS ONLY
    </select>




</mapper>